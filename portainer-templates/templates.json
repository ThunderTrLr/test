{
  "version": "2",
  "templates": [
    {
      "type": 3,
      "title": "owncast",
      "categories": [
        "stream",
        "home-lab"
      ],
      "description": "watch rtmp streams",
      "logo": "https://owncast.online/images/owncast-logo-1000x1000.png",
      "note": "",
      "platform": "linux",
      "env": [
        {
          "label": "PATH_HOST_DATA",
          "name": "PATH_HOST_DATA",
          "default": "/zpool/docker/owncast",
          "description": "Path for persistent host mounted volumes"
        },
        {
          "label": "HOST_PORT_WEB",
          "name": "HOST_PORT_WEB",
          "default": "8080",
          "description": "expose http port (web interface)"
        },
        {
          "label": "HOST_PORT_RTMP",
          "name": "HOST_PORT_RTMP",
          "default": "1935",
          "description": "expose rtmp port (stream endpoint)"
        }
      ],
      "repository": {
        "stackfile": "docker-compose/owncast/docker-compose.yml",
        "url": "https://github.com/yvvidolov/home-lab"
      }
    },
    {
      "type": 3,
      "title": "mlan-mail",
      "categories": [
        "home-lab"
      ],
      "description": "",
      "logo": "",
      "note": "",
      "platform": "",
      "env": [],
      "repository": {
        "stackfile": "docker-compose/mlan-mail/docker-compose.yml",
        "url": "https://github.com/yvvidolov/home-lab"
      }
    },
    {
      "type": 3,
      "title": "cloudflare-ddns",
      "categories": [
        "network",
        "home-lab"
      ],
      "description": "If you have dynamic IP and registered domain with cloudflare, this will update it",
      "logo": "https://developers.cloudflare.com/_astro/logo.BU9hiExz.svg",
      "note": "<h3>Cloudflare DDNS</h3>\n<p><a href=\"https://blog.sixteenbit.com/how-to-setup-cloudflare-ddns-using-docker/\">Guide</a><br />\nCF_API_TOKEN / API Token: your_api_key_for_domain_zone<br />\nDomains: <code>domain_name.com</code><br />\nPoxied: <code>false</code>  </p>",
      "platform": "linux",
      "env": [
        {
          "label": "API_KEY",
          "name": "API_KEY",
          "default": "cloudflare_api_key",
          "description": "https://blog.sixteenbit.com/how-to-setup-cloudflare-ddns-using-docker/"
        },
        {
          "label": "ZONE",
          "name": "ZONE",
          "default": "domain.com",
          "description": "domain name for which you will change the ip"
        },
        {
          "label": "SUBDOMAIN",
          "name": "SUBDOMAIN",
          "default": "",
          "description": "subdomain name"
        },
        {
          "label": "PROXIED",
          "name": "PROXIED",
          "default": "false",
          "description": "if cloudflare should proxy connection through its servers"
        }
      ],
      "repository": {
        "stackfile": "docker-compose/cloudflare-ddns/docker-compose.yml",
        "url": "https://github.com/yvvidolov/home-lab"
      }
    },
    {
      "type": 3,
      "title": "authentik",
      "categories": [
        "network",
        "home-lab"
      ],
      "description": "LDAP and OAUTH2 provider",
      "logo": "https://github.com/goauthentik/authentik/blob/main/web/icons/icon.png?raw=true",
      "note": "<p><a href=\"https://docs.goauthentik.io/docs/installation/docker-compose\">Official Docs</a></p>\n<p>First install: <code>http://192.168.2.2:88/if/flow/initial-setup/</code></p>",
      "platform": "linux",
      "env": [
        {
          "label": "PATH_HOST",
          "name": "PATH_HOST",
          "default": "/zpool/docker/authentik",
          "description": "persistent storage"
        },
        {
          "label": "AUTHENTIK_SECRET_KEY",
          "name": "AUTHENTIK_SECRET_KEY",
          "default": "[CHANGE_ME]",
          "description": "openssl rand -base64 60 | tr -d '\\n'"
        },
        {
          "label": "PG_PASS",
          "name": "PG_PASS",
          "default": "[CHANGE_ME]",
          "description": "setup the database password"
        },
        {
          "label": "PG_USER",
          "name": "PG_USER",
          "default": "authentik",
          "description": ""
        },
        {
          "label": "PG_DB",
          "name": "PG_DB",
          "default": "authentik",
          "description": ""
        },
        {
          "label": "COMPOSE_PORT_HTTP",
          "name": "COMPOSE_PORT_HTTP",
          "default": "88",
          "description": "expose web ui port"
        },
        {
          "label": "AUTHENTIK_EMAIL__HOST",
          "name": "AUTHENTIK_EMAIL__HOST",
          "default": "",
          "description": ""
        },
        {
          "label": "AUTHENTIK_EMAIL__PORT",
          "name": "AUTHENTIK_EMAIL__PORT",
          "default": "25",
          "description": ""
        },
        {
          "label": "AUTHENTIK_EMAIL__USERNAME",
          "name": "AUTHENTIK_EMAIL__USERNAME",
          "default": "",
          "description": ""
        },
        {
          "label": "AUTHENTIK_EMAIL__PASSWORD",
          "name": "AUTHENTIK_EMAIL__PASSWORD",
          "default": "",
          "description": ""
        },
        {
          "label": "AUTHENTIK_EMAIL__USE_TLS",
          "name": "AUTHENTIK_EMAIL__USE_TLS",
          "default": "false",
          "description": ""
        },
        {
          "label": "AUTHENTIK_EMAIL__USE_SSL",
          "name": "AUTHENTIK_EMAIL__USE_SSL",
          "default": "true",
          "description": ""
        },
        {
          "label": "AUTHENTIK_EMAIL__TIMEOUT",
          "name": "AUTHENTIK_EMAIL__TIMEOUT",
          "default": "10",
          "description": ""
        },
        {
          "label": "AUTHENTIK_EMAIL__FROM",
          "name": "AUTHENTIK_EMAIL__FROM",
          "default": "authentik@vidolov.net",
          "description": ""
        }
      ],
      "repository": {
        "stackfile": "docker-compose/authentik/docker-compose.yml",
        "url": "https://github.com/yvvidolov/home-lab"
      }
    },
    {
      "type": 3,
      "title": "firefly-iii",
      "categories": [
        "finance",
        "home-lab"
      ],
      "description": "keep track of your finances, has android apps and web interface",
      "logo": "https://github.com/walkxcode/dashboard-icons/blob/main/png/firefly.png?raw=true",
      "note": "",
      "platform": "linux",
      "env": [
        {
          "label": "TZ",
          "name": "TZ",
          "default": "Europe/Sofia",
          "description": ""
        },
        {
          "label": "DEFAULT_LOCALE",
          "name": "DEFAULT_LOCALE",
          "default": "equal",
          "description": ""
        },
        {
          "label": "PATH_HOST",
          "name": "PATH_HOST",
          "default": "/zpool/docker/firefly",
          "description": "where to storage persistent files"
        },
        {
          "label": "PORT",
          "name": "PORT",
          "default": "8080",
          "description": "publish host port for web interface"
        },
        {
          "label": "APP_URL",
          "name": "APP_URL",
          "default": "https://firefly.example.com",
          "description": "should match reverse proxy url"
        },
        {
          "label": "MYSQL_PASSWORD",
          "name": "MYSQL_PASSWORD",
          "default": "[CHANGE_ME]",
          "description": "database password"
        },
        {
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD",
          "default": "[CHANGE_ME]",
          "description": "database root password"
        },
        {
          "label": "STATIC_CRON_TOKEN",
          "name": "STATIC_CRON_TOKEN",
          "default": "32_CHARACTERS_STATIC_CRON_TOKEN!",
          "description": "needed to synchronize cron jobs"
        },
        {
          "label": "APP_KEY",
          "name": "APP_KEY",
          "default": "SomeRandomStringOf32CharsExactly",
          "description": "Encryption key, 32 chars, avoid ''"
        }
      ],
      "repository": {
        "stackfile": "docker-compose/firefly-iii/docker-compose.yml",
        "url": "https://github.com/yvvidolov/home-lab"
      }
    },
    {
      "type": 3,
      "title": "homepage",
      "categories": [
        "dashboard",
        "home-lab"
      ],
      "description": "web portal / dashboard",
      "logo": "https://github.com/walkxcode/dashboard-icons/blob/main/png/homepage.png?raw=true",
      "note": "",
      "platform": "linux",
      "env": [
        {
          "label": "PATH_HOST_CONFIG",
          "name": "PATH_HOST_CONFIG",
          "default": "/zpool/docker/homepage/config",
          "description": "path to your homepage configuration"
        },
        {
          "label": "PATH_HOST_IMAGES",
          "name": "PATH_HOST_IMAGES",
          "default": "/zpool/docker/homepage/images",
          "description": "path to image resources"
        },
        {
          "label": "PORT",
          "name": "PORT",
          "default": "3000",
          "description": "publish container port on host"
        }
      ],
      "repository": {
        "stackfile": "docker-compose/homepage/docker-compose.yml",
        "url": "https://github.com/yvvidolov/home-lab"
      }
    },
    {
      "type": 3,
      "title": "redmine",
      "categories": [
        "project-management",
        "home-lab"
      ],
      "description": "issue tracker",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3f/Redmine_logo.svg/719px-Redmine_logo.svg.png?20101216135906",
      "note": "First login:<br/>username: admin<br/>password: admin<br/>Make sure you visit the Administration link and Load the default configuration before creating any projects.",
      "platform": "linux",
      "env": [
        {
          "label": "PATH_DOCKER",
          "name": "PATH_DOCKER",
          "default": "/home/users/yvvidolov/work/projects/home-lab/temp",
          "description": ""
        },
        {
          "label": "PATH_SECRET",
          "name": "PATH_SECRET",
          "default": "/home/users/yvvidolov/work/projects/home-lab/temp/secrets",
          "description": ""
        },
        {
          "label": "TZ",
          "name": "TZ",
          "default": "Europe/Sofia",
          "description": "Timezone"
        },
        {
          "label": "PORT",
          "name": "PORT",
          "default": "8080",
          "description": ""
        },
        {
          "label": "DB_PASSWORD",
          "name": "DB_PASSWORD",
          "default": "[CHANGE_ME]",
          "description": ""
        },
        {
          "label": "DB_ROOT_PASSWORD",
          "name": "DB_ROOT_PASSWORD",
          "default": "[CHANGE_ME]",
          "description": ""
        }
      ],
      "repository": {
        "stackfile": "docker-compose/redmine/docker-compose.yml",
        "url": "https://github.com/yvvidolov/home-lab"
      }
    },
    {
      "type": 3,
      "title": "portainer",
      "categories": [
        "docker",
        "home-lab"
      ],
      "description": "manage containers and deployment",
      "logo": "https://icon.icepanel.io/Technology/svg/Portainer.svg",
      "note": "",
      "platform": "linux",
      "env": [
        {
          "label": "PATH_HOST_DATA",
          "name": "PATH_HOST_DATA",
          "default": "/zpool/docker/portainer",
          "description": "Path for persistent host mounted volumes"
        },
        {
          "label": "PORT",
          "name": "PORT",
          "default": "9000",
          "description": "Publish web interface"
        }
      ],
      "repository": {
        "stackfile": "docker-compose/portainer/docker-compose.yml",
        "url": "https://github.com/yvvidolov/home-lab"
      }
    },
    {
      "type": 3,
      "title": "template",
      "categories": [
        "home-lab"
      ],
      "description": "",
      "logo": "",
      "note": "",
      "platform": "linux",
      "env": [
        {
          "label": "PATH_DOCKER",
          "name": "PATH_DOCKER",
          "default": "/zpool/docker",
          "description": "Path for persistent host mounted volumes"
        },
        {
          "label": "PATH_SECRET",
          "name": "PATH_SECRET",
          "default": "/zpool/docker/secrets",
          "description": "Path to secret files for use in container"
        },
        {
          "label": "TZ",
          "name": "TZ",
          "default": "Europe/Sofia",
          "description": "Timezone"
        },
        {
          "label": "LOCAL_SETTING",
          "name": "LOCAL_SETTING",
          "default": "my_port_80",
          "description": ""
        }
      ],
      "repository": {
        "stackfile": "docker-compose/template/docker-compose.yml",
        "url": "https://github.com/yvvidolov/home-lab"
      }
    },
    {
      "type": 3,
      "title": "benchmark",
      "categories": [
        "home-lab"
      ],
      "description": "",
      "logo": "",
      "note": "<h2>CPU/Memory</h2>\n<pre><code class=\"language-shell\">wget -O passmark.zip https://www.passmark.com/downloads/pt_linux_x64.zip\nunzip passmark.zip\n./PerformanceTest/pt_linux_x64\nA # run all tests\nY # Upload results\n</code></pre>\n<h4>Example Results</h4>\n<blockquote>\n<p>CPU Mark with PL4=45000 (default 30000): 11200</p>\n</blockquote>\n<pre><code class=\"language-shell\">CPU Mark:                          7229\n  Integer Math                     20404 Million Operations/s\n  Floating Point Math              12611 Million Operations/s\n  Prime Numbers                    24.9 Million Primes/s\n  Sorting                          11432 Thousand Strings/s\n  Encryption                       5781 MB/s\n  Compression                      79489 KB/s\n  CPU Single Threaded              2066 Million Operations/s\n  Physics                          648 Frames/s\n  Extended Instructions (SSE)      3969 Million Matrices/s\n\nMemory Mark:                       2911\n  Database Operations              4519 Thousand Operations/s\n  Memory Read Cached               19804 MB/s\n  Memory Read Uncached             14035 MB/s\n  Memory Write                     12375 MB/s\n  Available RAM                    23395 Megabytes\n  Memory Latency                   29 Nanoseconds\n  Memory Threaded                  28481 MB/s\n\nResults submitted: https://www.passmark.com/baselines/V11/display.php?id=507044239921\n</code></pre>\n<h2>Disk Performance</h2>\n<h3>ZFS (optional)</h3>\n<blockquote>\n<p>ZFS filesystem uses heavy caching. To correctly benchmark, a new filesystem with disabled caching needs to be created. Disabling caching on an already existing filesystem might already have cached resources.</p>\n</blockquote>\n<ol>\n<li>\n<p>Create new ZFS filesystem just for benchmarking</p>\n<ul>\n<li>Storage -&gt; ZFS -&gt;  Pools -&gt; Add filesystem -&gt; bench_hdd</li>\n</ul>\n</li>\n<li>\n<p>Disable caching</p>\n<ul>\n<li>web</li>\n<li>Storage -&gt; ZFS -&gt; Pools -&gt; bench_hdd -&gt; Properties</li>\n<li>Search: cache</li>\n<li>primarycache: none</li>\n<li>\n<p>secondarycache: none</p>\n</li>\n<li>\n<p>(or) ssh</p>\n</li>\n<li>\n<p>Save original cache settings for the tested pool:<br />\n<code>shell\n    zfs get primarycache zpool/docker\n    zfs get secondarycache zpool/docker</code></p>\n</li>\n<li>\n<p>Disable L1ARC and L2ARC caching<br />\n<code>shell\n    zfs set primarycache=none zpool/docker\n    zfs set secondarycache=none zpool/docker</code></p>\n</li>\n</ul>\n</li>\n</ol>\n<h3>Benchmark A (fio)</h3>\n<ol>\n<li>\n<p>Mount volumes from different disk devices<br />\n    Edit benchmark/docker-compose.yml:<br />\n    ```yml<br />\n    volumes: # This is needed to benchmark storage devices</p>\n<ul>\n<li>/zpool/bench_hdd:/home/dev/hdd</li>\n<li>/srv/dev-disk-by-uuid-b5afbc2e-ccbb-4460-ae47-1883a47792ee/home:/home/dev/mmc</li>\n<li>/root/:/home/dev/ssd<br />\n```</li>\n</ul>\n</li>\n<li>\n<p>Deploy using portainer or docker compose</p>\n</li>\n<li>Attach console to container (portainer or cli: <code>docker exec -it benchmark bash</code>)</li>\n<li>Run benchmark for all device types:<br />\n<code>shell\n   ./fio-cdm-master/fio-cdm dev/hdd\n   ./fio-cdm-master/fio-cdm dev/mmc\n   ./fio-cdm-master/fio-cdm dev/ssd</code></li>\n</ol>\n<h4>Example results:</h4>\n<pre><code class=\"language-shell\">$ ./fio-cdm-master/fio-cdm dev/hdd\ntests: 5, size: 1.0GiB, target: /home/dev/hdd 2.8GiB/10.4TiB\n|Name        |  Read(MB/s)| Write(MB/s)|\n|------------|------------|------------|\n|SEQ1M Q8 T1 |      175.04|     1578.10|\n|SEQ1M Q1 T1 |     8729.61|     1923.58|\n|RND4K Q32T16|      231.49|        2.25|\n|. IOPS      |    56516.31|      548.20|\n|. latency us|     8924.63|   829209.93|\n|RND4K Q1 T1 |        0.49|        0.43|\n|. IOPS      |      119.55|      106.05|\n|. latency us|     8352.47|     9410.11|\n\n$ ./fio-cdm-master/fio-cdm dev/mmc\ntests: 5, size: 1.0GiB, target: /home/dev/mmc 3.8GiB/112.8GiB\n|Name        |  Read(MB/s)| Write(MB/s)|\n|------------|------------|------------|\n|SEQ1M Q8 T1 |      335.54|      247.90|\n|SEQ1M Q1 T1 |      277.86|      185.31|\n|RND4K Q32T16|      102.97|      129.86|\n|. IOPS      |    25140.32|    31704.65|\n|. latency us|    20298.63|    16107.09|\n|RND4K Q1 T1 |       17.45|       30.55|\n|. IOPS      |     4260.55|     7458.71|\n|. latency us|      233.01|      129.24|\n\n$ ./fio-cdm-master/fio-cdm dev/ssd\ntests: 5, size: 1.0GiB, target: /home/dev/ssd 3.8GiB/122.0GiB\n|Name        |  Read(MB/s)| Write(MB/s)|\n|------------|------------|------------|\n|SEQ1M Q8 T1 |     3610.43|     2984.27|\n|SEQ1M Q1 T1 |     2381.86|     1703.27|\n|RND4K Q32T16|     1976.05|     1771.63|\n|. IOPS      |   482435.23|   432527.09|\n|. latency us|     1059.68|     1173.31|\n|RND4K Q1 T1 |       60.18|      168.46|\n|. IOPS      |    14693.06|    41127.77|\n|. latency us|       66.64|       22.62|\n</code></pre>\n<h3>Benchmark B (dd container)</h3>\n<blockquote>\n<p>NOTE: dropping caches is not possible inside container. Only writing speed is reliable if tested from container</p>\n</blockquote>\n<pre><code class=\"language-shell\">./fio-cdm-master/bench_disk_dd.sh dev/hdd\n./fio-cdm-master/bench_disk_dd.sh dev/mmc\n./fio-cdm-master/bench_disk_dd.sh dev/ssd\n</code></pre>\n<h4>Example results:</h4>\n<pre><code class=\"language-shell\">Write: 2147479552 bytes (2.1 GB, 2.0 GiB) copied, 8.92617 s, 241 MB/\nWrite: 2147479552 bytes (2.1 GB, 2.0 GiB) copied, 9.77646 s, 220 MB/\nWrite: 2147479552 bytes (2.1 GB, 2.0 GiB) copied, 1.95963 s, 1.1 GB/\n</code></pre>\n<h3>Benchmark C (dd host)</h3>\n<pre><code class=\"language-shell\">wget https://raw.githubusercontent.com/yvvidolov/home-lab/main/docker/linux-benchmark-cli/bench_disk_dd.sh\nchmod +x bench_disk_dd.sh\n./bench_disk_dd.sh /zpool/bench_hdd\n./bench_disk_dd.sh /srv/dev-disk-by-uuid-b5afbc2e-ccbb-4460-ae47-1883a47792ee/home\n./bench_disk_dd.sh /root/\n</code></pre>\n<h4>Example results:</h4>\n<pre><code class=\"language-shell\">Write: 2147479552 bytes (2.1 GB, 2.0 GiB) copied, 6.93616 s, 310 MB/s\nRead: ctrl+c # aborted (too slow?)\nWrite: 2147479552 bytes (2.1 GB, 2.0 GiB) copied, 9.79409 s, 219 MB/s\nRead: 2147479552 bytes (2.1 GB, 2.0 GiB) copied, 7.13273 s, 301 MB/s\nWrite: 2147479552 bytes (2.1 GB, 2.0 GiB) copied, 2.02303 s, 1.1 GB/s\nRead: 2147479552 bytes (2.1 GB, 2.0 GiB) copied, 0.87866 s, 2.4 GB/s\n</code></pre>",
      "platform": "",
      "env": [],
      "repository": {
        "stackfile": "docker-compose/benchmark/docker-compose.yml",
        "url": "https://github.com/yvvidolov/home-lab"
      }
    },
    {
      "type": 3,
      "title": "onlyoffice",
      "categories": [
        "home-lab"
      ],
      "description": "",
      "logo": "",
      "note": "",
      "platform": "",
      "env": [],
      "repository": {
        "stackfile": "docker-compose/onlyoffice/docker-compose.yml",
        "url": "https://github.com/yvvidolov/home-lab"
      }
    },
    {
      "type": 3,
      "title": "dolibarr",
      "categories": [
        "erp",
        "home-lab"
      ],
      "description": "erm/crm/erp software",
      "logo": "https://raw.githubusercontent.com/Dolibarr/dolibarr/52c40c90319d1529c6b903d32ee98ce6f7142c18/doc/images/dolibarr_logo.svg",
      "note": "",
      "platform": "linux",
      "env": [
        {
          "label": "DOMAIN_URL",
          "name": "DOMAIN_URL",
          "default": "http://dolibarr.vidolov.net",
          "description": ""
        },
        {
          "label": "PATH_HOST",
          "name": "PATH_HOST",
          "default": "/zpool/docker/dolibarr",
          "description": "where to storage persistent files"
        },
        {
          "label": "PORT",
          "name": "PORT",
          "default": "89",
          "description": "publish host port for web interface"
        },
        {
          "label": "MYSQL_PASSWORD",
          "name": "MYSQL_PASSWORD",
          "default": "[CHANGE_ME]",
          "description": "database password"
        },
        {
          "label": "DOLI_INSTANCE_UNIQUE_ID",
          "name": "DOLI_INSTANCE_UNIQUE_ID",
          "default": "23948",
          "description": ""
        },
        {
          "label": "DOLI_ADMIN_LOGIN",
          "name": "DOLI_ADMIN_LOGIN",
          "default": "admin",
          "description": ""
        },
        {
          "label": "DOLI_ADMIN_PASSWORD",
          "name": "DOLI_ADMIN_PASSWORD",
          "default": "[CHANGE_ME]",
          "description": ""
        }
      ],
      "repository": {
        "stackfile": "docker-compose/dolibarr/docker-compose.yml",
        "url": "https://github.com/yvvidolov/home-lab"
      }
    },
    {
      "type": 3,
      "title": "gitea",
      "categories": [
        "source-control",
        "home-lab"
      ],
      "description": "github foss clone, source control, issue tracker, ci/cd, wiki",
      "logo": "https://github.com/go-gitea/gitea/blob/main/public/assets/img/logo.png?raw=true",
      "note": "<p>After installation:<br />\n- Open <code>192.168.2.2:${PORT_HTTP}</code><br />\n- Site Title: <code>gitea: vidolov.net</code><br />\n- Server Domain: <code>gitea.vidolov.net</code><br />\n- SSH server port: <code>222</code><br />\n- Gitea base URL: <code>https://gitea.vidolov.net/</code><br />\n- EMail Settings (optional):<br />\n- Server and Third party settings:<br />\n  - Enable OpenID Sign-in: <code>False</code><br />\n  - Disable Self-Registration: <code>True</code><br />\n  - Require Sign-in to View Pages: ?<br />\n- Administrator Account Settings:<br />\n  - Username: <code>gitea</code> # <code>admin</code> is reserved<br />\n  - Email address: <code>gitea@vidolov.net</code><br />\n  - Password: <code>my_secret_password</code></p>\n<p>After login:<br />\n- Open: Settings -&gt; Site Administration<br />\n- Identity &amp; Access -&gt; Authentication Sources<br />\n- Actions -&gt; Runners</p>\n<p>From OMV SSH:<br />\n- <code>nano /zpool/docker/gitea/gitea/conf.app.ini</code><br />\n- <code>[server]</code><br />\n  - <code>MINIMUM_KEY_SIZE_CHECK = false</code></p>\n<p>From Internet Router:<br />\n- Add WAN port forward: <code>omv_gitea_ssh</code>: <code>8022</code> -&gt; <code>192.168.2.2:8022</code></p>",
      "platform": "linux",
      "env": [
        {
          "label": "PATH_HOST",
          "name": "PATH_HOST",
          "default": "/zpool/docker/gitea",
          "description": "persistent storage"
        },
        {
          "label": "PORT_SSH",
          "name": "PORT_SSH",
          "default": "222",
          "description": "for cloning git repo"
        },
        {
          "label": "PORT_HTTP",
          "name": "PORT_HTTP",
          "default": "8001",
          "description": "web interface"
        },
        {
          "label": "DB_PASSWORD",
          "name": "DB_PASSWORD",
          "default": "[CHANGE_ME]",
          "description": ""
        }
      ],
      "repository": {
        "stackfile": "docker-compose/gitea/docker-compose.yml",
        "url": "https://github.com/yvvidolov/home-lab"
      }
    },
    {
      "type": 3,
      "title": "nginx-proxy-manager",
      "categories": [
        "network",
        "home-lab"
      ],
      "description": "reverse proxy manager based on neginx",
      "logo": "https://github.com/walkxcode/dashboard-icons/blob/main/png/nginx-proxy-manager.png?raw=true",
      "note": "",
      "platform": "linux",
      "env": [
        {
          "label": "PATH_HOST",
          "name": "PATH_HOST",
          "default": "/zpool/docker/nginx-proxy-manager",
          "description": "persistent storage"
        },
        {
          "label": "HOST_PORT_HTTP",
          "name": "HOST_PORT_HTTP",
          "default": "80",
          "description": "Public HTTP Port, should be forwarded in router"
        },
        {
          "label": "HOST_PORT_HTTPS",
          "name": "HOST_PORT_HTTPS",
          "default": "443",
          "description": "Public HTTPS Port, should be forwarded in router"
        },
        {
          "label": "HOST_PORT_ADMIN",
          "name": "HOST_PORT_ADMIN",
          "default": "81",
          "description": "Admin Web Port for the control panel"
        }
      ],
      "repository": {
        "stackfile": "docker-compose/nginx-proxy-manager/docker-compose.yml",
        "url": "https://github.com/yvvidolov/home-lab"
      }
    },
    {
      "type": 3,
      "title": "mailserver",
      "categories": [
        "network",
        "home-lab"
      ],
      "description": "self host mail server with smtp relay and web client",
      "logo": "https://github.com/docker-mailserver/docker-mailserver/blob/master/docs/content/assets/logo/.src/dmo-logo.png?raw=true",
      "note": "<h3>mxrouting.net</h3>\n<p>We are going to use mxrouting as an smtp relay to avoid IP blacklisting and RTP dns check.<br />\nCurrent blackfriday deal 30\\$ for 3 year service (7200 mails per day).<br />\nLifetime account is 150\\$.</p>\n<ul>\n<li>Account Manager -&gt; Domain Setup -&gt; Add New -&gt; vidolov.net</li>\n<li>Account Manager -&gt; SSL Certificates -&gt; Disable SSL   </li>\n<li>E-mail Manager -&gt; Disable DKIM</li>\n<li>E-mail Manager -&gt; Create Accont -&gt; relay@vidolov.net</li>\n</ul>\n<h3>cloudflare DNS</h3>\n<p>Generate DKIM key<br />\n<code>setup config dkim keysize 2048 domain 'example.com,not-example.com'</code></p>\n<ul>\n<li><code>CNAME</code> | <code>autoconfig</code> | <code>mail.vidolov.net</code></li>\n<li><code>CNAME</code> | <code>autodiscover</code> | <code>mail.vidolov.net</code></li>\n<li><code>CNAME</code> | <code>mail</code> | <code>vidolov.net</code></li>\n<li><code>MX</code> | <code>vidolov.net</code> | <code>mail.vidolov.net</code></li>\n<li><code>TXT</code> | <code>_dmarc</code> | <code>v=DMARC1; p=quarantine; sp=none; fo=0; adkim=r; aspf=r; pct=100; rf=afrf; ri=86400; rua=mailto:dmarc.report@vidolov.net; ruf=mailto:dmarc.report@vidolov.net</code></li>\n<li><code>TXT</code> | <code>mail._domainkey</code> | <code>v=DKIM1; k=rsa; p=[generated_key]</code> # generated DKIM key</li>\n<li><code>TXT</code> | <code>vidolov.net</code> | <code>v=spf1 include:mxroute.com -all</code></li>\n</ul>\n<h3>Public Ports</h3>\n<p>Following ports need to be port forwarded to the mail server: <br />\n- <code>25</code> # SMTP<br />\n- <code>587</code> # ESMTP<br />\n- <code>143</code> # IMAP4<br />\n- <code>993</code> # IMAP4</p>\n<h2>docker-mailserver</h2>\n<p><a href=\"https://docker-mailserver.github.io/docker-mailserver/latest/introduction/\">Official Documentation</a></p>\n<ul>\n<li>Share lets encrypt etc directory volume from nginx proxy manager</li>\n<li><code>docker compose up</code> # start the container or use portainer template</li>\n<li><code>docker exec -ti mailserver setup email add admin@vidolov.net [my_secret_password]</code> # execute through ssh on server</li>\n</ul>\n<h3>docker-mailserver command cheat sheet</h3>\n<p>Add new user: <code>docker exec -ti mailserver setup email add admin@vidolov.net [my_secret_password]</code><br />\nAdd user alias: <code>docker exec -ti mailserver setup alias add yavor@vidolov.net admin@vidolov.net</code><br />\nSet user quota: <code>docker exec -ti mailserver setup quota set admin@vidolov.net 10M</code><br />\nShow user verbose list: <code>docker exec -ti mailserver setup email list</code>  </p>\n<h2>RoundCube</h2>\n<blockquote>\n<p>NOTE: There seems to be a bug in docker sqlite assigned owners<br />\nExecute the following to fix: <code>chown -R root:root /zpool/docker/roundcube # ${PATH_ROUNDCUBE}</code></p>\n</blockquote>\n<h2>Testing email setup and deliverability</h2>\n<ul>\n<li>https://www.mail-tester.com/  </li>\n<li>https://mxtoolbox.com/deliverability</li>\n<li>https://mxtoolbox.com/SuperTool.aspx?action=dmarc%3amail.vidolov.net&amp;run=toolpage</li>\n</ul>",
      "platform": "linux",
      "env": [
        {
          "label": "TZ",
          "name": "TZ",
          "default": "Europe/Sofia",
          "description": ""
        },
        {
          "label": "MAIL_HOSTNAME",
          "name": "MAIL_HOSTNAME",
          "default": "mail.vidolov.net",
          "description": "MX and autoconf DNS entry to point the the mail server"
        },
        {
          "label": "PATH_MAILSERVER",
          "name": "PATH_MAILSERVER",
          "default": "/zpool/docker/mailserver",
          "description": "where to storage persistent files"
        },
        {
          "label": "PATH_ROUNDCUBE",
          "name": "PATH_ROUNDCUBE",
          "default": "/zpool/docker/roundcube",
          "description": "where to storage persistent files"
        },
        {
          "label": "PATH_NPM_LETSENCRYPT",
          "name": "PATH_NPM_LETSENCRYPT",
          "default": "/zpool/docker/nginx-proxy-manager/letsencrypt",
          "description": "Path to lets encrypt folder (setup by another container [nginx proxy manager])"
        },
        {
          "label": "DEFAULT_RELAY_HOST",
          "name": "DEFAULT_RELAY_HOST",
          "default": "",
          "description": "Use an SMTP relay"
        },
        {
          "label": "RELAY_USER",
          "name": "RELAY_USER",
          "default": "",
          "description": "SMTP relay user"
        },
        {
          "label": "RELAY_PASSWORD",
          "name": "RELAY_PASSWORD",
          "default": "",
          "description": "SMTP relay pass"
        },
        {
          "label": "ROUNDCUBE_PORT",
          "name": "ROUNDCUBE_PORT",
          "default": "9000",
          "description": "Publish web interface"
        },
        {
          "label": "MAILBOX_SIZE_LIMIT",
          "name": "MAILBOX_SIZE_LIMIT",
          "default": "1024000000",
          "description": "Default mailbox size in bytes"
        },
        {
          "label": "MESSAGE_SIZE_LIMIT",
          "name": "MESSAGE_SIZE_LIMIT",
          "default": "50240000",
          "description": "Max attachment size"
        }
      ],
      "repository": {
        "stackfile": "docker-compose/docker-mailserver/docker-compose.yml",
        "url": "https://github.com/yvvidolov/home-lab"
      }
    },
    {
      "type": 3,
      "title": "taiga",
      "categories": [
        "project-management",
        "home-lab"
      ],
      "description": "project management, agile, kanban, issue tracker",
      "logo": "https://raw.githubusercontent.com/taigaio/taiga-front/91bea87500cada61fe866b13369133b9e054504d/app/svg/logo.svg",
      "note": "<p>https://github.com/docker-taiga/taiga </p>",
      "platform": "linux",
      "env": [
        {
          "label": "PORT",
          "name": "PORT",
          "default": "9000",
          "description": "expose webui port"
        },
        {
          "label": "TAIGA_SCHEME",
          "name": "TAIGA_SCHEME",
          "default": "http",
          "description": "serve Taiga using \"http\" or \"https\" (secured) connection"
        },
        {
          "label": "TAIGA_DOMAIN",
          "name": "TAIGA_DOMAIN",
          "default": "taiga.vidolov.net",
          "description": "Taiga's base URL"
        },
        {
          "label": "SUBPATH",
          "name": "SUBPATH",
          "default": "\"\"",
          "description": "it'll be appended to the TAIGA_DOMAIN (use either \"\" or a \"/subpath\")"
        },
        {
          "label": "WEBSOCKETS_SCHEME",
          "name": "WEBSOCKETS_SCHEME",
          "default": "ws",
          "description": "events connection protocol (use either \"ws\" or \"wss\")"
        },
        {
          "label": "SECRET_KEY",
          "name": "SECRET_KEY",
          "default": "6wwbhp1j4p12ih4vp12hnv",
          "description": "Please, change it to an unpredictable value!!"
        },
        {
          "label": "POSTGRES_USER",
          "name": "POSTGRES_USER",
          "default": "taiga",
          "description": "user to connect to PostgreSQL"
        },
        {
          "label": "POSTGRES_PASSWORD",
          "name": "POSTGRES_PASSWORD",
          "default": "6wwbhp1j4p12ih4vp12hnv",
          "description": "database user's password"
        },
        {
          "label": "RABBITMQ_USER",
          "name": "RABBITMQ_USER",
          "default": "taiga",
          "description": "user to connect to RabbitMQ"
        },
        {
          "label": "RABBITMQ_PASS",
          "name": "RABBITMQ_PASS",
          "default": "6wwbhp1j4p12ih4vp12hnv",
          "description": "RabbitMQ user's password"
        },
        {
          "label": "RABBITMQ_VHOST",
          "name": "RABBITMQ_VHOST",
          "default": "taiga",
          "description": "RabbitMQ container name"
        },
        {
          "label": "RABBITMQ_ERLANG_COOKIE",
          "name": "RABBITMQ_ERLANG_COOKIE",
          "default": "6wwbhp1j4p12ih4vp12hnv",
          "description": "unique value shared by any connected instance of RabbitMQ"
        },
        {
          "label": "ATTACHMENTS_MAX_AGE",
          "name": "ATTACHMENTS_MAX_AGE",
          "default": "360",
          "description": "token expiration date (in seconds)"
        },
        {
          "label": "ENABLE_TELEMETRY",
          "name": "ENABLE_TELEMETRY",
          "default": "False",
          "description": ""
        }
      ],
      "repository": {
        "stackfile": "docker-compose/taiga/docker-compose.yml",
        "url": "https://github.com/yvvidolov/home-lab"
      }
    }
  ]
}